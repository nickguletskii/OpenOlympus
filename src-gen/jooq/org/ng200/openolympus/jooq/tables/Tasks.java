/**
 * This class is generated by jOOQ
 */
package org.ng200.openolympus.jooq.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.0"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Tasks extends org.jooq.impl.TableImpl<org.ng200.openolympus.jooq.tables.records.TasksRecord> {

	private static final long serialVersionUID = 1726823570;

	/**
	 * The reference instance of <code>public.tasks</code>
	 */
	public static final org.ng200.openolympus.jooq.tables.Tasks TASKS = new org.ng200.openolympus.jooq.tables.Tasks();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<org.ng200.openolympus.jooq.tables.records.TasksRecord> getRecordType() {
		return org.ng200.openolympus.jooq.tables.records.TasksRecord.class;
	}

	/**
	 * The column <code>public.tasks.id</code>.
	 */
	public final org.jooq.TableField<org.ng200.openolympus.jooq.tables.records.TasksRecord, java.lang.Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>public.tasks.description_file</code>.
	 */
	public final org.jooq.TableField<org.ng200.openolympus.jooq.tables.records.TasksRecord, java.lang.String> DESCRIPTION_FILE = createField("description_file", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>public.tasks.name</code>.
	 */
	public final org.jooq.TableField<org.ng200.openolympus.jooq.tables.records.TasksRecord, java.lang.String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>public.tasks.published</code>.
	 */
	public final org.jooq.TableField<org.ng200.openolympus.jooq.tables.records.TasksRecord, java.lang.Boolean> PUBLISHED = createField("published", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

	/**
	 * The column <code>public.tasks.task_location</code>.
	 */
	public final org.jooq.TableField<org.ng200.openolympus.jooq.tables.records.TasksRecord, java.lang.String> TASK_LOCATION = createField("task_location", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>public.tasks.time_added</code>.
	 */
	public final org.jooq.TableField<org.ng200.openolympus.jooq.tables.records.TasksRecord, java.sql.Timestamp> TIME_ADDED = createField("time_added", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * Create a <code>public.tasks</code> table reference
	 */
	public Tasks() {
		this("tasks", null);
	}

	/**
	 * Create an aliased <code>public.tasks</code> table reference
	 */
	public Tasks(java.lang.String alias) {
		this(alias, org.ng200.openolympus.jooq.tables.Tasks.TASKS);
	}

	private Tasks(java.lang.String alias, org.jooq.Table<org.ng200.openolympus.jooq.tables.records.TasksRecord> aliased) {
		this(alias, aliased, null);
	}

	private Tasks(java.lang.String alias, org.jooq.Table<org.ng200.openolympus.jooq.tables.records.TasksRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, org.ng200.openolympus.jooq.Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<org.ng200.openolympus.jooq.tables.records.TasksRecord> getPrimaryKey() {
		return org.ng200.openolympus.jooq.Keys.TASKS_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<org.ng200.openolympus.jooq.tables.records.TasksRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<org.ng200.openolympus.jooq.tables.records.TasksRecord>>asList(org.ng200.openolympus.jooq.Keys.TASKS_PKEY, org.ng200.openolympus.jooq.Keys.UK_S90MH6056FM69W0ILWKA74VUT);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.ng200.openolympus.jooq.tables.Tasks as(java.lang.String alias) {
		return new org.ng200.openolympus.jooq.tables.Tasks(alias, this);
	}

	/**
	 * Rename this table
	 */
	public org.ng200.openolympus.jooq.tables.Tasks rename(java.lang.String name) {
		return new org.ng200.openolympus.jooq.tables.Tasks(name, null);
	}
}
