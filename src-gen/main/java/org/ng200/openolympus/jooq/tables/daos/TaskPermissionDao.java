/**
 * The MIT License
 * Copyright (c) 2014-2015 Nick Guletskii
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
/**
 * This class is generated by jOOQ
 */
package org.ng200.openolympus.jooq.tables.daos;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Record3;
import org.jooq.impl.DAOImpl;
import org.ng200.openolympus.jooq.enums.TaskPermissionType;
import org.ng200.openolympus.jooq.tables.TaskPermission;
import org.ng200.openolympus.jooq.tables.records.TaskPermissionRecord;

/**
 * This class is generated by jOOQ.
 */
@Generated(value = {
						"http://www.jooq.org",
						"jOOQ version:3.6.2"
}, comments = "This class is generated by jOOQ")
@SuppressWarnings({
					"all",
					"unchecked",
					"rawtypes"
})
public class TaskPermissionDao extends
		DAOImpl<TaskPermissionRecord, org.ng200.openolympus.jooq.tables.pojos.TaskPermission, Record3<Integer, Long, TaskPermissionType>> {

	/**
	 * Create a new TaskPermissionDao without any configuration
	 */
	public TaskPermissionDao() {
		super(TaskPermission.TASK_PERMISSION,
				org.ng200.openolympus.jooq.tables.pojos.TaskPermission.class);
	}

	/**
	 * Create a new TaskPermissionDao with an attached configuration
	 */
	public TaskPermissionDao(Configuration configuration) {
		super(TaskPermission.TASK_PERMISSION,
				org.ng200.openolympus.jooq.tables.pojos.TaskPermission.class,
				configuration);
	}

	/**
	 * Fetch records that have <code>permission IN (values)</code>
	 */
	public List<org.ng200.openolympus.jooq.tables.pojos.TaskPermission> fetchByPermission(
			TaskPermissionType... values) {
		return this.fetch(TaskPermission.TASK_PERMISSION.PERMISSION, values);
	}

	/**
	 * Fetch records that have <code>principal_id IN (values)</code>
	 */
	public List<org.ng200.openolympus.jooq.tables.pojos.TaskPermission> fetchByPrincipalId(
			Long... values) {
		return this.fetch(TaskPermission.TASK_PERMISSION.PRINCIPAL_ID, values);
	}

	/**
	 * Fetch records that have <code>task_id IN (values)</code>
	 */
	public List<org.ng200.openolympus.jooq.tables.pojos.TaskPermission> fetchByTaskId(
			Integer... values) {
		return this.fetch(TaskPermission.TASK_PERMISSION.TASK_ID, values);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected Record3<Integer, Long, TaskPermissionType> getId(
			org.ng200.openolympus.jooq.tables.pojos.TaskPermission object) {
		return this.compositeKeyRecord(object.getTaskId(),
				object.getPrincipalId(), object.getPermission());
	}
}
