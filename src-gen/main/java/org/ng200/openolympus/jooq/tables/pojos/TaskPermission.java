/**
 * This class is generated by jOOQ
 */
package org.ng200.openolympus.jooq.tables.pojos;


import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.ng200.openolympus.jooq.enums.TaskPermissionType;
import org.ng200.openolympus.jooq.tables.interfaces.ITaskPermission;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "task_permission", schema = "public", uniqueConstraints = {
	@UniqueConstraint(columnNames = {"permission", "task_id", "principal_id"})
})
public class TaskPermission implements ITaskPermission {

	private static final long serialVersionUID = -952131462;

	private TaskPermissionType permission;
	private Integer            taskId;
	private Long               principalId;

	public TaskPermission() {}

	public TaskPermission(TaskPermission value) {
		this.permission = value.permission;
		this.taskId = value.taskId;
		this.principalId = value.principalId;
	}

	public TaskPermission(
		TaskPermissionType permission,
		Integer            taskId,
		Long               principalId
	) {
		this.permission = permission;
		this.taskId = taskId;
		this.principalId = principalId;
	}

	@Column(name = "permission", nullable = false)
	@Override
	public TaskPermissionType getPermission() {
		return this.permission;
	}

	@Override
	public TaskPermission setPermission(TaskPermissionType permission) {
		this.permission = permission;
		return this;
	}

	@Column(name = "task_id", nullable = false, precision = 32)
	@Override
	public Integer getTaskId() {
		return this.taskId;
	}

	@Override
	public TaskPermission setTaskId(Integer taskId) {
		this.taskId = taskId;
		return this;
	}

	@Column(name = "principal_id", nullable = false, precision = 64)
	@Override
	public Long getPrincipalId() {
		return this.principalId;
	}

	@Override
	public TaskPermission setPrincipalId(Long principalId) {
		this.principalId = principalId;
		return this;
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder("TaskPermission (");

		sb.append(permission);
		sb.append(", ").append(taskId);
		sb.append(", ").append(principalId);

		sb.append(")");
		return sb.toString();
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(ITaskPermission from) {
		setPermission(from.getPermission());
		setTaskId(from.getTaskId());
		setPrincipalId(from.getPrincipalId());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends ITaskPermission> E into(E into) {
		into.from(this);
		return into;
	}
}
