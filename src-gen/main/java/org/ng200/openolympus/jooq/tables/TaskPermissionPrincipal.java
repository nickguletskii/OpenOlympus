/**
 * This class is generated by jOOQ
 */
package org.ng200.openolympus.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.ng200.openolympus.jooq.Keys;
import org.ng200.openolympus.jooq.Public;
import org.ng200.openolympus.jooq.tables.records.TaskPermissionPrincipalRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskPermissionPrincipal extends TableImpl<TaskPermissionPrincipalRecord> {

	private static final long serialVersionUID = -897860470;

	/**
	 * The reference instance of <code>public.task_permission_principal</code>
	 */
	public static final TaskPermissionPrincipal TASK_PERMISSION_PRINCIPAL = new TaskPermissionPrincipal();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TaskPermissionPrincipalRecord> getRecordType() {
		return TaskPermissionPrincipalRecord.class;
	}

	/**
	 * The column <code>public.task_permission_principal.principal_id</code>.
	 */
	public final TableField<TaskPermissionPrincipalRecord, Long> PRINCIPAL_ID = createField("principal_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * The column <code>public.task_permission_principal.task_permission_id</code>.
	 */
	public final TableField<TaskPermissionPrincipalRecord, Long> TASK_PERMISSION_ID = createField("task_permission_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * Create a <code>public.task_permission_principal</code> table reference
	 */
	public TaskPermissionPrincipal() {
		this("task_permission_principal", null);
	}

	/**
	 * Create an aliased <code>public.task_permission_principal</code> table reference
	 */
	public TaskPermissionPrincipal(String alias) {
		this(alias, TASK_PERMISSION_PRINCIPAL);
	}

	private TaskPermissionPrincipal(String alias, Table<TaskPermissionPrincipalRecord> aliased) {
		this(alias, aliased, null);
	}

	private TaskPermissionPrincipal(String alias, Table<TaskPermissionPrincipalRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<TaskPermissionPrincipalRecord> getPrimaryKey() {
		return Keys.TASK_PERMISSION_PRINCIPAL_PK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<TaskPermissionPrincipalRecord>> getKeys() {
		return Arrays.<UniqueKey<TaskPermissionPrincipalRecord>>asList(Keys.TASK_PERMISSION_PRINCIPAL_PK);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<TaskPermissionPrincipalRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<TaskPermissionPrincipalRecord, ?>>asList(Keys.TASK_PERMISSION_PRINCIPAL__TASK_PERMISSION_FK);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskPermissionPrincipal as(String alias) {
		return new TaskPermissionPrincipal(alias, this);
	}

	/**
	 * Rename this table
	 */
	public TaskPermissionPrincipal rename(String name) {
		return new TaskPermissionPrincipal(name, null);
	}
}
