/**
 * The MIT License
 * Copyright (c) 2014-2016 Nick Guletskii
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
/**
 * This class is generated by jOOQ
 */
package org.ng200.openolympus.jooq.tables.pojos;


import java.time.OffsetDateTime;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

import org.ng200.openolympus.jooq.tables.interfaces.IPersistentLogins;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "persistent_logins", schema = "public")
public class PersistentLogins implements IPersistentLogins {

	private static final long serialVersionUID = 963737418;

	private String         username;
	private String         series;
	private String         token;
	private OffsetDateTime lastUsed;

	public PersistentLogins() {}

	public PersistentLogins(PersistentLogins value) {
		this.username = value.username;
		this.series = value.series;
		this.token = value.token;
		this.lastUsed = value.lastUsed;
	}

	public PersistentLogins(
		String         username,
		String         series,
		String         token,
		OffsetDateTime lastUsed
	) {
		this.username = username;
		this.series = series;
		this.token = token;
		this.lastUsed = lastUsed;
	}

	@Column(name = "username", nullable = false, length = 64)
	@Override
	public String getUsername() {
		return this.username;
	}

	@Override
	public PersistentLogins setUsername(String username) {
		this.username = username;
		return this;
	}

	@Id
	@Column(name = "series", unique = true, nullable = false, length = 64)
	@Override
	public String getSeries() {
		return this.series;
	}

	@Override
	public PersistentLogins setSeries(String series) {
		this.series = series;
		return this;
	}

	@Column(name = "token", nullable = false, length = 64)
	@Override
	public String getToken() {
		return this.token;
	}

	@Override
	public PersistentLogins setToken(String token) {
		this.token = token;
		return this;
	}

	@Column(name = "last_used", nullable = false)
	@Override
	public OffsetDateTime getLastUsed() {
		return this.lastUsed;
	}

	@Override
	public PersistentLogins setLastUsed(OffsetDateTime lastUsed) {
		this.lastUsed = lastUsed;
		return this;
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder("PersistentLogins (");

		sb.append(username);
		sb.append(", ").append(series);
		sb.append(", ").append(token);
		sb.append(", ").append(lastUsed);

		sb.append(")");
		return sb.toString();
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IPersistentLogins from) {
		setUsername(from.getUsername());
		setSeries(from.getSeries());
		setToken(from.getToken());
		setLastUsed(from.getLastUsed());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IPersistentLogins> E into(E into) {
		into.from(this);
		return into;
	}
}
