/**
 * This class is generated by jOOQ
 */
package org.ng200.openolympus.jooq.tables.pojos;


import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.ng200.openolympus.jooq.tables.interfaces.IContestTasks;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "contest_tasks", schema = "public", uniqueConstraints = {
	@UniqueConstraint(columnNames = {"id_contest", "id_task"})
})
public class ContestTasks implements IContestTasks {

	private static final long serialVersionUID = 1367550037;

	private Integer idContest;
	private Integer idTask;

	public ContestTasks() {}

	public ContestTasks(ContestTasks value) {
		this.idContest = value.idContest;
		this.idTask = value.idTask;
	}

	public ContestTasks(
		Integer idContest,
		Integer idTask
	) {
		this.idContest = idContest;
		this.idTask = idTask;
	}

	@Column(name = "id_contest", nullable = false, precision = 32)
	@Override
	public Integer getIdContest() {
		return this.idContest;
	}

	@Override
	public ContestTasks setIdContest(Integer idContest) {
		this.idContest = idContest;
		return this;
	}

	@Column(name = "id_task", nullable = false, precision = 32)
	@Override
	public Integer getIdTask() {
		return this.idTask;
	}

	@Override
	public ContestTasks setIdTask(Integer idTask) {
		this.idTask = idTask;
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IContestTasks from) {
		setIdContest(from.getIdContest());
		setIdTask(from.getIdTask());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IContestTasks> E into(E into) {
		into.from(this);
		return into;
	}
}
