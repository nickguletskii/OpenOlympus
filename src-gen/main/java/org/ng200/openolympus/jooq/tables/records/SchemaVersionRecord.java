/**
 * The MIT License
 * Copyright (c) 2014-2016 Nick Guletskii
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
/**
 * This class is generated by jOOQ
 */
package org.ng200.openolympus.jooq.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;
import org.ng200.openolympus.jooq.tables.SchemaVersion;
import org.ng200.openolympus.jooq.tables.interfaces.ISchemaVersion;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "schema_version", schema = "public")
public class SchemaVersionRecord extends UpdatableRecordImpl<SchemaVersionRecord> implements Record11<Integer, Integer, String, String, String, String, Integer, String, Timestamp, Integer, Boolean>, ISchemaVersion {

	private static final long serialVersionUID = 84052438;

	/**
	 * Setter for <code>public.schema_version.version_rank</code>.
	 */
	@Override
	public SchemaVersionRecord setVersionRank(Integer value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>public.schema_version.version_rank</code>.
	 */
	@Column(name = "version_rank", nullable = false, precision = 32)
	@Override
	public Integer getVersionRank() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>public.schema_version.installed_rank</code>.
	 */
	@Override
	public SchemaVersionRecord setInstalledRank(Integer value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>public.schema_version.installed_rank</code>.
	 */
	@Column(name = "installed_rank", nullable = false, precision = 32)
	@Override
	public Integer getInstalledRank() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>public.schema_version.version</code>.
	 */
	@Override
	public SchemaVersionRecord setVersion(String value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>public.schema_version.version</code>.
	 */
	@Id
	@Column(name = "version", unique = true, nullable = false, length = 50)
	@Override
	public String getVersion() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>public.schema_version.description</code>.
	 */
	@Override
	public SchemaVersionRecord setDescription(String value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>public.schema_version.description</code>.
	 */
	@Column(name = "description", nullable = false, length = 200)
	@Override
	public String getDescription() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>public.schema_version.type</code>.
	 */
	@Override
	public SchemaVersionRecord setType(String value) {
		setValue(4, value);
		return this;
	}

	/**
	 * Getter for <code>public.schema_version.type</code>.
	 */
	@Column(name = "type", nullable = false, length = 20)
	@Override
	public String getType() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>public.schema_version.script</code>.
	 */
	@Override
	public SchemaVersionRecord setScript(String value) {
		setValue(5, value);
		return this;
	}

	/**
	 * Getter for <code>public.schema_version.script</code>.
	 */
	@Column(name = "script", nullable = false, length = 1000)
	@Override
	public String getScript() {
		return (String) getValue(5);
	}

	/**
	 * Setter for <code>public.schema_version.checksum</code>.
	 */
	@Override
	public SchemaVersionRecord setChecksum(Integer value) {
		setValue(6, value);
		return this;
	}

	/**
	 * Getter for <code>public.schema_version.checksum</code>.
	 */
	@Column(name = "checksum", precision = 32)
	@Override
	public Integer getChecksum() {
		return (Integer) getValue(6);
	}

	/**
	 * Setter for <code>public.schema_version.installed_by</code>.
	 */
	@Override
	public SchemaVersionRecord setInstalledBy(String value) {
		setValue(7, value);
		return this;
	}

	/**
	 * Getter for <code>public.schema_version.installed_by</code>.
	 */
	@Column(name = "installed_by", nullable = false, length = 100)
	@Override
	public String getInstalledBy() {
		return (String) getValue(7);
	}

	/**
	 * Setter for <code>public.schema_version.installed_on</code>.
	 */
	@Override
	public SchemaVersionRecord setInstalledOn(Timestamp value) {
		setValue(8, value);
		return this;
	}

	/**
	 * Getter for <code>public.schema_version.installed_on</code>.
	 */
	@Column(name = "installed_on", nullable = false)
	@Override
	public Timestamp getInstalledOn() {
		return (Timestamp) getValue(8);
	}

	/**
	 * Setter for <code>public.schema_version.execution_time</code>.
	 */
	@Override
	public SchemaVersionRecord setExecutionTime(Integer value) {
		setValue(9, value);
		return this;
	}

	/**
	 * Getter for <code>public.schema_version.execution_time</code>.
	 */
	@Column(name = "execution_time", nullable = false, precision = 32)
	@Override
	public Integer getExecutionTime() {
		return (Integer) getValue(9);
	}

	/**
	 * Setter for <code>public.schema_version.success</code>.
	 */
	@Override
	public SchemaVersionRecord setSuccess(Boolean value) {
		setValue(10, value);
		return this;
	}

	/**
	 * Getter for <code>public.schema_version.success</code>.
	 */
	@Column(name = "success", nullable = false)
	@Override
	public Boolean getSuccess() {
		return (Boolean) getValue(10);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<String> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record11 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row11<Integer, Integer, String, String, String, String, Integer, String, Timestamp, Integer, Boolean> fieldsRow() {
		return (Row11) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row11<Integer, Integer, String, String, String, String, Integer, String, Timestamp, Integer, Boolean> valuesRow() {
		return (Row11) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return SchemaVersion.SCHEMA_VERSION.VERSION_RANK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return SchemaVersion.SCHEMA_VERSION.INSTALLED_RANK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return SchemaVersion.SCHEMA_VERSION.VERSION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return SchemaVersion.SCHEMA_VERSION.DESCRIPTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return SchemaVersion.SCHEMA_VERSION.TYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field6() {
		return SchemaVersion.SCHEMA_VERSION.SCRIPT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field7() {
		return SchemaVersion.SCHEMA_VERSION.CHECKSUM;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field8() {
		return SchemaVersion.SCHEMA_VERSION.INSTALLED_BY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field9() {
		return SchemaVersion.SCHEMA_VERSION.INSTALLED_ON;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field10() {
		return SchemaVersion.SCHEMA_VERSION.EXECUTION_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Boolean> field11() {
		return SchemaVersion.SCHEMA_VERSION.SUCCESS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getVersionRank();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getInstalledRank();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getVersion();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getDescription();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getType();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value6() {
		return getScript();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value7() {
		return getChecksum();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value8() {
		return getInstalledBy();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value9() {
		return getInstalledOn();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value10() {
		return getExecutionTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Boolean value11() {
		return getSuccess();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SchemaVersionRecord value1(Integer value) {
		setVersionRank(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SchemaVersionRecord value2(Integer value) {
		setInstalledRank(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SchemaVersionRecord value3(String value) {
		setVersion(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SchemaVersionRecord value4(String value) {
		setDescription(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SchemaVersionRecord value5(String value) {
		setType(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SchemaVersionRecord value6(String value) {
		setScript(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SchemaVersionRecord value7(Integer value) {
		setChecksum(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SchemaVersionRecord value8(String value) {
		setInstalledBy(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SchemaVersionRecord value9(Timestamp value) {
		setInstalledOn(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SchemaVersionRecord value10(Integer value) {
		setExecutionTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SchemaVersionRecord value11(Boolean value) {
		setSuccess(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SchemaVersionRecord values(Integer value1, Integer value2, String value3, String value4, String value5, String value6, Integer value7, String value8, Timestamp value9, Integer value10, Boolean value11) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		value10(value10);
		value11(value11);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(ISchemaVersion from) {
		setVersionRank(from.getVersionRank());
		setInstalledRank(from.getInstalledRank());
		setVersion(from.getVersion());
		setDescription(from.getDescription());
		setType(from.getType());
		setScript(from.getScript());
		setChecksum(from.getChecksum());
		setInstalledBy(from.getInstalledBy());
		setInstalledOn(from.getInstalledOn());
		setExecutionTime(from.getExecutionTime());
		setSuccess(from.getSuccess());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends ISchemaVersion> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached SchemaVersionRecord
	 */
	public SchemaVersionRecord() {
		super(SchemaVersion.SCHEMA_VERSION);
	}

	/**
	 * Create a detached, initialised SchemaVersionRecord
	 */
	public SchemaVersionRecord(Integer versionRank, Integer installedRank, String version, String description, String type, String script, Integer checksum, String installedBy, Timestamp installedOn, Integer executionTime, Boolean success) {
		super(SchemaVersion.SCHEMA_VERSION);

		setValue(0, versionRank);
		setValue(1, installedRank);
		setValue(2, version);
		setValue(3, description);
		setValue(4, type);
		setValue(5, script);
		setValue(6, checksum);
		setValue(7, installedBy);
		setValue(8, installedOn);
		setValue(9, executionTime);
		setValue(10, success);
	}
}
