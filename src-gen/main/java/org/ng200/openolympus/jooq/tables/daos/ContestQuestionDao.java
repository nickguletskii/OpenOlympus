/**
 * This class is generated by jOOQ
 */
package org.ng200.openolympus.jooq.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.ng200.openolympus.jooq.tables.ContestQuestion;
import org.ng200.openolympus.jooq.tables.records.ContestQuestionRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ContestQuestionDao extends DAOImpl<ContestQuestionRecord, org.ng200.openolympus.jooq.tables.pojos.ContestQuestion, Integer> {

	/**
	 * Create a new ContestQuestionDao without any configuration
	 */
	public ContestQuestionDao() {
		super(ContestQuestion.CONTEST_QUESTION, org.ng200.openolympus.jooq.tables.pojos.ContestQuestion.class);
	}

	/**
	 * Create a new ContestQuestionDao with an attached configuration
	 */
	public ContestQuestionDao(Configuration configuration) {
		super(ContestQuestion.CONTEST_QUESTION, org.ng200.openolympus.jooq.tables.pojos.ContestQuestion.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected Integer getId(org.ng200.openolympus.jooq.tables.pojos.ContestQuestion object) {
		return object.getId();
	}

	/**
	 * Fetch records that have <code>id IN (values)</code>
	 */
	public List<org.ng200.openolympus.jooq.tables.pojos.ContestQuestion> fetchById(Integer... values) {
		return fetch(ContestQuestion.CONTEST_QUESTION.ID, values);
	}

	/**
	 * Fetch a unique record that has <code>id = value</code>
	 */
	public org.ng200.openolympus.jooq.tables.pojos.ContestQuestion fetchOneById(Integer value) {
		return fetchOne(ContestQuestion.CONTEST_QUESTION.ID, value);
	}

	/**
	 * Fetch records that have <code>question IN (values)</code>
	 */
	public List<org.ng200.openolympus.jooq.tables.pojos.ContestQuestion> fetchByQuestion(String... values) {
		return fetch(ContestQuestion.CONTEST_QUESTION.QUESTION, values);
	}

	/**
	 * Fetch records that have <code>response IN (values)</code>
	 */
	public List<org.ng200.openolympus.jooq.tables.pojos.ContestQuestion> fetchByResponse(String... values) {
		return fetch(ContestQuestion.CONTEST_QUESTION.RESPONSE, values);
	}

	/**
	 * Fetch records that have <code>user_id IN (values)</code>
	 */
	public List<org.ng200.openolympus.jooq.tables.pojos.ContestQuestion> fetchByUserId(Long... values) {
		return fetch(ContestQuestion.CONTEST_QUESTION.USER_ID, values);
	}

	/**
	 * Fetch records that have <code>contest_id IN (values)</code>
	 */
	public List<org.ng200.openolympus.jooq.tables.pojos.ContestQuestion> fetchByContestId(Integer... values) {
		return fetch(ContestQuestion.CONTEST_QUESTION.CONTEST_ID, values);
	}
	public org.ng200.openolympus.jooq.tables.pojos.ContestQuestion fetchOneById(String id) {
		return fetchOneById(java.lang.Integer.valueOf(id));
	}
}
