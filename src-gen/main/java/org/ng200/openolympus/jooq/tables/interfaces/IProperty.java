/**
 * The MIT License
 * Copyright (c) 2014-2016 Nick Guletskii
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
/**
 * This class is generated by jOOQ
 */
package org.ng200.openolympus.jooq.tables.interfaces;


import java.io.Serializable;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "property", schema = "public")
public interface IProperty extends Serializable {

	/**
	 * Setter for <code>public.property.id</code>.
	 */
	public IProperty setId(Long value);

	/**
	 * Getter for <code>public.property.id</code>.
	 */
	@Id
	@Column(name = "id", unique = true, nullable = false, precision = 64)
	public Long getId();

	/**
	 * Setter for <code>public.property.property_key</code>.
	 */
	public IProperty setPropertyKey(String value);

	/**
	 * Getter for <code>public.property.property_key</code>.
	 */
	@Column(name = "property_key", unique = true, length = 255)
	public String getPropertyKey();

	/**
	 * Setter for <code>public.property.property_value</code>.
	 */
	public IProperty setPropertyValue(byte[] value);

	/**
	 * Getter for <code>public.property.property_value</code>.
	 */
	@Column(name = "property_value", unique = true)
	public byte[] getPropertyValue();

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * Load data from another generated Record/POJO implementing the common interface IProperty
	 */
	public void from(org.ng200.openolympus.jooq.tables.interfaces.IProperty from);

	/**
	 * Copy data into another generated Record/POJO implementing the common interface IProperty
	 */
	public <E extends org.ng200.openolympus.jooq.tables.interfaces.IProperty> E into(E into);
}
