/**
 * This class is generated by jOOQ
 */
package org.ng200.openolympus.jooq.tables.pojos;


import java.time.Duration;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

import org.ng200.openolympus.jooq.tables.interfaces.ITimeExtension;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "time_extension", schema = "public")
public class TimeExtension implements ITimeExtension {

	private static final long serialVersionUID = -1099331246;

	private Long     id;
	private Duration duration;
	private String   reason;
	private Long     userId;
	private Integer  contestId;

	public TimeExtension() {}

	public TimeExtension(TimeExtension value) {
		this.id = value.id;
		this.duration = value.duration;
		this.reason = value.reason;
		this.userId = value.userId;
		this.contestId = value.contestId;
	}

	public TimeExtension(
		Long     id,
		Duration duration,
		String   reason,
		Long     userId,
		Integer  contestId
	) {
		this.id = id;
		this.duration = duration;
		this.reason = reason;
		this.userId = userId;
		this.contestId = contestId;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false, precision = 64)
	@Override
	public Long getId() {
		return this.id;
	}

	@Override
	public TimeExtension setId(Long id) {
		this.id = id;
		return this;
	}

	@Column(name = "duration", precision = 64)
	@Override
	public Duration getDuration() {
		return this.duration;
	}

	@Override
	public TimeExtension setDuration(Duration duration) {
		this.duration = duration;
		return this;
	}

	@Column(name = "reason")
	@Override
	public String getReason() {
		return this.reason;
	}

	@Override
	public TimeExtension setReason(String reason) {
		this.reason = reason;
		return this;
	}

	@Column(name = "user_id", nullable = false, precision = 64)
	@Override
	public Long getUserId() {
		return this.userId;
	}

	@Override
	public TimeExtension setUserId(Long userId) {
		this.userId = userId;
		return this;
	}

	@Column(name = "contest_id", nullable = false, precision = 32)
	@Override
	public Integer getContestId() {
		return this.contestId;
	}

	@Override
	public TimeExtension setContestId(Integer contestId) {
		this.contestId = contestId;
		return this;
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder("TimeExtension (");

		sb.append(id);
		sb.append(", ").append(duration);
		sb.append(", ").append(reason);
		sb.append(", ").append(userId);
		sb.append(", ").append(contestId);

		sb.append(")");
		return sb.toString();
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(ITimeExtension from) {
		setId(from.getId());
		setDuration(from.getDuration());
		setReason(from.getReason());
		setUserId(from.getUserId());
		setContestId(from.getContestId());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends ITimeExtension> E into(E into) {
		into.from(this);
		return into;
	}
}
