/**
 * This class is generated by jOOQ
 */
package org.ng200.openolympus.jooq.tables.pojos;


import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.ng200.openolympus.jooq.enums.ContestPermissionType;
import org.ng200.openolympus.jooq.tables.interfaces.IContestPermission;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "contest_permission", schema = "public", uniqueConstraints = {
	@UniqueConstraint(columnNames = {"contest_id", "principal_id"})
})
public class ContestPermission implements IContestPermission {

	private static final long serialVersionUID = 663047894;

	private Integer               contestId;
	private Long                  principalId;
	private ContestPermissionType permission;

	public ContestPermission() {}

	public ContestPermission(ContestPermission value) {
		this.contestId = value.contestId;
		this.principalId = value.principalId;
		this.permission = value.permission;
	}

	public ContestPermission(
		Integer               contestId,
		Long                  principalId,
		ContestPermissionType permission
	) {
		this.contestId = contestId;
		this.principalId = principalId;
		this.permission = permission;
	}

	@Column(name = "contest_id", nullable = false, precision = 32)
	@Override
	public Integer getContestId() {
		return this.contestId;
	}

	@Override
	public ContestPermission setContestId(Integer contestId) {
		this.contestId = contestId;
		return this;
	}

	@Column(name = "principal_id", nullable = false, precision = 64)
	@Override
	public Long getPrincipalId() {
		return this.principalId;
	}

	@Override
	public ContestPermission setPrincipalId(Long principalId) {
		this.principalId = principalId;
		return this;
	}

	@Column(name = "permission", nullable = false)
	@Override
	public ContestPermissionType getPermission() {
		return this.permission;
	}

	@Override
	public ContestPermission setPermission(ContestPermissionType permission) {
		this.permission = permission;
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IContestPermission from) {
		setContestId(from.getContestId());
		setPrincipalId(from.getPrincipalId());
		setPermission(from.getPermission());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IContestPermission> E into(E into) {
		into.from(this);
		return into;
	}
}
