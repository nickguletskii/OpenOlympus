/**
 * The MIT License
 * Copyright (c) 2014-2016 Nick Guletskii
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
/**
 * This class is generated by jOOQ
 */
package org.ng200.openolympus.jooq.tables.pojos;


import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

import org.ng200.openolympus.jooq.tables.interfaces.ISchemaVersion;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "schema_version", schema = "public")
public class SchemaVersion implements ISchemaVersion {

	private static final long serialVersionUID = 303463617;

	private Integer   versionRank;
	private Integer   installedRank;
	private String    version;
	private String    description;
	private String    type;
	private String    script;
	private Integer   checksum;
	private String    installedBy;
	private Timestamp installedOn;
	private Integer   executionTime;
	private Boolean   success;

	public SchemaVersion() {}

	public SchemaVersion(SchemaVersion value) {
		this.versionRank = value.versionRank;
		this.installedRank = value.installedRank;
		this.version = value.version;
		this.description = value.description;
		this.type = value.type;
		this.script = value.script;
		this.checksum = value.checksum;
		this.installedBy = value.installedBy;
		this.installedOn = value.installedOn;
		this.executionTime = value.executionTime;
		this.success = value.success;
	}

	public SchemaVersion(
		Integer   versionRank,
		Integer   installedRank,
		String    version,
		String    description,
		String    type,
		String    script,
		Integer   checksum,
		String    installedBy,
		Timestamp installedOn,
		Integer   executionTime,
		Boolean   success
	) {
		this.versionRank = versionRank;
		this.installedRank = installedRank;
		this.version = version;
		this.description = description;
		this.type = type;
		this.script = script;
		this.checksum = checksum;
		this.installedBy = installedBy;
		this.installedOn = installedOn;
		this.executionTime = executionTime;
		this.success = success;
	}

	@Column(name = "version_rank", nullable = false, precision = 32)
	@Override
	public Integer getVersionRank() {
		return this.versionRank;
	}

	@Override
	public SchemaVersion setVersionRank(Integer versionRank) {
		this.versionRank = versionRank;
		return this;
	}

	@Column(name = "installed_rank", nullable = false, precision = 32)
	@Override
	public Integer getInstalledRank() {
		return this.installedRank;
	}

	@Override
	public SchemaVersion setInstalledRank(Integer installedRank) {
		this.installedRank = installedRank;
		return this;
	}

	@Id
	@Column(name = "version", unique = true, nullable = false, length = 50)
	@Override
	public String getVersion() {
		return this.version;
	}

	@Override
	public SchemaVersion setVersion(String version) {
		this.version = version;
		return this;
	}

	@Column(name = "description", nullable = false, length = 200)
	@Override
	public String getDescription() {
		return this.description;
	}

	@Override
	public SchemaVersion setDescription(String description) {
		this.description = description;
		return this;
	}

	@Column(name = "type", nullable = false, length = 20)
	@Override
	public String getType() {
		return this.type;
	}

	@Override
	public SchemaVersion setType(String type) {
		this.type = type;
		return this;
	}

	@Column(name = "script", nullable = false, length = 1000)
	@Override
	public String getScript() {
		return this.script;
	}

	@Override
	public SchemaVersion setScript(String script) {
		this.script = script;
		return this;
	}

	@Column(name = "checksum", precision = 32)
	@Override
	public Integer getChecksum() {
		return this.checksum;
	}

	@Override
	public SchemaVersion setChecksum(Integer checksum) {
		this.checksum = checksum;
		return this;
	}

	@Column(name = "installed_by", nullable = false, length = 100)
	@Override
	public String getInstalledBy() {
		return this.installedBy;
	}

	@Override
	public SchemaVersion setInstalledBy(String installedBy) {
		this.installedBy = installedBy;
		return this;
	}

	@Column(name = "installed_on", nullable = false)
	@Override
	public Timestamp getInstalledOn() {
		return this.installedOn;
	}

	@Override
	public SchemaVersion setInstalledOn(Timestamp installedOn) {
		this.installedOn = installedOn;
		return this;
	}

	@Column(name = "execution_time", nullable = false, precision = 32)
	@Override
	public Integer getExecutionTime() {
		return this.executionTime;
	}

	@Override
	public SchemaVersion setExecutionTime(Integer executionTime) {
		this.executionTime = executionTime;
		return this;
	}

	@Column(name = "success", nullable = false)
	@Override
	public Boolean getSuccess() {
		return this.success;
	}

	@Override
	public SchemaVersion setSuccess(Boolean success) {
		this.success = success;
		return this;
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder("SchemaVersion (");

		sb.append(versionRank);
		sb.append(", ").append(installedRank);
		sb.append(", ").append(version);
		sb.append(", ").append(description);
		sb.append(", ").append(type);
		sb.append(", ").append(script);
		sb.append(", ").append(checksum);
		sb.append(", ").append(installedBy);
		sb.append(", ").append(installedOn);
		sb.append(", ").append(executionTime);
		sb.append(", ").append(success);

		sb.append(")");
		return sb.toString();
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(ISchemaVersion from) {
		setVersionRank(from.getVersionRank());
		setInstalledRank(from.getInstalledRank());
		setVersion(from.getVersion());
		setDescription(from.getDescription());
		setType(from.getType());
		setScript(from.getScript());
		setChecksum(from.getChecksum());
		setInstalledBy(from.getInstalledBy());
		setInstalledOn(from.getInstalledOn());
		setExecutionTime(from.getExecutionTime());
		setSuccess(from.getSuccess());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends ISchemaVersion> E into(E into) {
		into.from(this);
		return into;
	}
}
