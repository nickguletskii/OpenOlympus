/**
 * This class is generated by jOOQ
 */
package org.ng200.openolympus.jooq.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;
import org.ng200.openolympus.jooq.enums.ContestPermissionType;
import org.ng200.openolympus.jooq.tables.ContestPermission;
import org.ng200.openolympus.jooq.tables.records.ContestPermissionRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ContestPermissionDao extends DAOImpl<ContestPermissionRecord, org.ng200.openolympus.jooq.tables.pojos.ContestPermission, Record2<Integer, Long>> {

	/**
	 * Create a new ContestPermissionDao without any configuration
	 */
	public ContestPermissionDao() {
		super(ContestPermission.CONTEST_PERMISSION, org.ng200.openolympus.jooq.tables.pojos.ContestPermission.class);
	}

	/**
	 * Create a new ContestPermissionDao with an attached configuration
	 */
	public ContestPermissionDao(Configuration configuration) {
		super(ContestPermission.CONTEST_PERMISSION, org.ng200.openolympus.jooq.tables.pojos.ContestPermission.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected Record2<Integer, Long> getId(org.ng200.openolympus.jooq.tables.pojos.ContestPermission object) {
		return compositeKeyRecord(object.getContestId(), object.getPrincipalId());
	}

	/**
	 * Fetch records that have <code>contest_id IN (values)</code>
	 */
	public List<org.ng200.openolympus.jooq.tables.pojos.ContestPermission> fetchByContestId(Integer... values) {
		return fetch(ContestPermission.CONTEST_PERMISSION.CONTEST_ID, values);
	}

	/**
	 * Fetch records that have <code>principal_id IN (values)</code>
	 */
	public List<org.ng200.openolympus.jooq.tables.pojos.ContestPermission> fetchByPrincipalId(Long... values) {
		return fetch(ContestPermission.CONTEST_PERMISSION.PRINCIPAL_ID, values);
	}

	/**
	 * Fetch records that have <code>permission IN (values)</code>
	 */
	public List<org.ng200.openolympus.jooq.tables.pojos.ContestPermission> fetchByPermission(ContestPermissionType... values) {
		return fetch(ContestPermission.CONTEST_PERMISSION.PERMISSION, values);
	}
}
