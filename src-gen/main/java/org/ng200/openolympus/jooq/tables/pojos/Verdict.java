/**
 * The MIT License
 * Copyright (c) 2014-2015 Nick Guletskii
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
/**
 * This class is generated by jOOQ
 */
package org.ng200.openolympus.jooq.tables.pojos;

import java.math.BigDecimal;
import java.time.Duration;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

import org.ng200.openolympus.jooq.enums.VerdictStatusType;
import org.ng200.openolympus.jooq.tables.interfaces.IVerdict;
import org.ng200.openolympus.model.IVerdictSecurityDescription;

/**
 * This class is generated by jOOQ.
 */
@Generated(value = {
						"http://www.jooq.org",
						"jOOQ version:3.6.2"
}, comments = "This class is generated by jOOQ")
@SuppressWarnings({
					"all",
					"unchecked",
					"rawtypes"
})
@Entity
@Table(name = "verdict", schema = "public")
public class Verdict implements IVerdictSecurityDescription, IVerdict {

	private static final long serialVersionUID = -1994850018;

	private Long id;
	private BigDecimal score;
	private BigDecimal maximumScore;
	private VerdictStatusType status;
	private Boolean viewableDuringContest;
	private String path;
	private Duration cpuTime;
	private Duration realTime;
	private Long memoryPeak;
	private String additionalInformation;
	private Long solutionId;

	public Verdict() {
	}

	public Verdict(
			Long id,
			BigDecimal score,
			BigDecimal maximumScore,
			VerdictStatusType status,
			Boolean viewableDuringContest,
			String path,
			Duration cpuTime,
			Duration realTime,
			Long memoryPeak,
			String additionalInformation,
			Long solutionId) {
		this.id = id;
		this.score = score;
		this.maximumScore = maximumScore;
		this.status = status;
		this.viewableDuringContest = viewableDuringContest;
		this.path = path;
		this.cpuTime = cpuTime;
		this.realTime = realTime;
		this.memoryPeak = memoryPeak;
		this.additionalInformation = additionalInformation;
		this.solutionId = solutionId;
	}

	public Verdict(Verdict value) {
		this.id = value.id;
		this.score = value.score;
		this.maximumScore = value.maximumScore;
		this.status = value.status;
		this.viewableDuringContest = value.viewableDuringContest;
		this.path = value.path;
		this.cpuTime = value.cpuTime;
		this.realTime = value.realTime;
		this.memoryPeak = value.memoryPeak;
		this.additionalInformation = value.additionalInformation;
		this.solutionId = value.solutionId;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IVerdict from) {
		this.setId(from.getId());
		this.setScore(from.getScore());
		this.setMaximumScore(from.getMaximumScore());
		this.setStatus(from.getStatus());
		this.setViewableDuringContest(from.getViewableDuringContest());
		this.setPath(from.getPath());
		this.setCpuTime(from.getCpuTime());
		this.setRealTime(from.getRealTime());
		this.setMemoryPeak(from.getMemoryPeak());
		this.setAdditionalInformation(from.getAdditionalInformation());
		this.setSolutionId(from.getSolutionId());
	}

	@Column(name = "additional_information")
	@Override
	public String getAdditionalInformation() {
		return this.additionalInformation;
	}

	@Column(name = "cpu_time", precision = 64)
	@Override
	public Duration getCpuTime() {
		return this.cpuTime;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false, precision = 64)
	@Override
	public Long getId() {
		return this.id;
	}

	@Column(name = "maximum_score", nullable = false, precision = 19, scale = 2)
	@Override
	public BigDecimal getMaximumScore() {
		return this.maximumScore;
	}

	@Column(name = "memory_peak", precision = 64)
	@Override
	public Long getMemoryPeak() {
		return this.memoryPeak;
	}

	@Column(name = "path", nullable = false)
	@Override
	public String getPath() {
		return this.path;
	}

	@Column(name = "real_time", precision = 64)
	@Override
	public Duration getRealTime() {
		return this.realTime;
	}

	@Column(name = "score", precision = 19, scale = 2)
	@Override
	public BigDecimal getScore() {
		return this.score;
	}

	@Column(name = "solution_id", precision = 64)
	@Override
	public Long getSolutionId() {
		return this.solutionId;
	}

	@Column(name = "status", nullable = false)
	@Override
	public VerdictStatusType getStatus() {
		return this.status;
	}

	@Column(name = "viewable_during_contest", nullable = false)
	@Override
	public Boolean getViewableDuringContest() {
		return this.viewableDuringContest;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IVerdict> E into(E into) {
		into.from(this);
		return into;
	}

	@Override
	public Verdict setAdditionalInformation(String additionalInformation) {
		this.additionalInformation = additionalInformation;
		return this;
	}

	@Override
	public Verdict setCpuTime(Duration cpuTime) {
		this.cpuTime = cpuTime;
		return this;
	}

	@Override
	public Verdict setId(Long id) {
		this.id = id;
		return this;
	}

	@Override
	public Verdict setMaximumScore(BigDecimal maximumScore) {
		this.maximumScore = maximumScore;
		return this;
	}

	@Override
	public Verdict setMemoryPeak(Long memoryPeak) {
		this.memoryPeak = memoryPeak;
		return this;
	}

	@Override
	public Verdict setPath(String path) {
		this.path = path;
		return this;
	}

	@Override
	public Verdict setRealTime(Duration realTime) {
		this.realTime = realTime;
		return this;
	}

	@Override
	public Verdict setScore(BigDecimal score) {
		this.score = score;
		return this;
	}

	@Override
	public Verdict setSolutionId(Long solutionId) {
		this.solutionId = solutionId;
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	@Override
	public Verdict setStatus(VerdictStatusType status) {
		this.status = status;
		return this;
	}

	@Override
	public Verdict setViewableDuringContest(Boolean viewableDuringContest) {
		this.viewableDuringContest = viewableDuringContest;
		return this;
	}
}
