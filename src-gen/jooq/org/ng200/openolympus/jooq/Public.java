/**
 * The MIT License
 * Copyright (c) 2014-2015 Nick Guletskii
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
/**
 * This class is generated by jOOQ
 */
package org.ng200.openolympus.jooq;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.0"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Public extends org.jooq.impl.SchemaImpl {

	private static final long serialVersionUID = 571363791;

	/**
	 * The reference instance of <code>public</code>
	 */
	public static final Public PUBLIC = new Public();

	/**
	 * No further instances allowed
	 */
	private Public() {
		super("public");
	}

	@Override
	public final java.util.List<org.jooq.Sequence<?>> getSequences() {
		java.util.List result = new java.util.ArrayList();
		result.addAll(getSequences0());
		return result;
	}

	private final java.util.List<org.jooq.Sequence<?>> getSequences0() {
		return java.util.Arrays.<org.jooq.Sequence<?>>asList(
			org.ng200.openolympus.jooq.Sequences.HIBERNATE_SEQUENCE,
			org.ng200.openolympus.jooq.Sequences.VERDICTS_ID_SEQ);
	}

	@Override
	public final java.util.List<org.jooq.Table<?>> getTables() {
		java.util.List result = new java.util.ArrayList();
		result.addAll(getTables0());
		return result;
	}

	private final java.util.List<org.jooq.Table<?>> getTables0() {
		return java.util.Arrays.<org.jooq.Table<?>>asList(
			org.ng200.openolympus.jooq.tables.ContestAt.CONTEST_AT,
			org.ng200.openolympus.jooq.tables.ContestAtForUser.CONTEST_AT_FOR_USER,
			org.ng200.openolympus.jooq.tables.ContestMessages.CONTEST_MESSAGES,
			org.ng200.openolympus.jooq.tables.ContestParticipations.CONTEST_PARTICIPATIONS,
			org.ng200.openolympus.jooq.tables.ContestQuestions.CONTEST_QUESTIONS,
			org.ng200.openolympus.jooq.tables.Contests.CONTESTS,
			org.ng200.openolympus.jooq.tables.ContestsTasks.CONTESTS_TASKS,
			org.ng200.openolympus.jooq.tables.Properties.PROPERTIES,
			org.ng200.openolympus.jooq.tables.RememberMeTokens.REMEMBER_ME_TOKENS,
			org.ng200.openolympus.jooq.tables.Solutions.SOLUTIONS,
			org.ng200.openolympus.jooq.tables.TaskMaintenanceInformation.TASK_MAINTENANCE_INFORMATION,
			org.ng200.openolympus.jooq.tables.Tasks.TASKS,
			org.ng200.openolympus.jooq.tables.TimeExtensions.TIME_EXTENSIONS,
			org.ng200.openolympus.jooq.tables.UserRoles.USER_ROLES,
			org.ng200.openolympus.jooq.tables.Users.USERS,
			org.ng200.openolympus.jooq.tables.UsersRoles.USERS_ROLES,
			org.ng200.openolympus.jooq.tables.Verdicts.VERDICTS);
	}
}
