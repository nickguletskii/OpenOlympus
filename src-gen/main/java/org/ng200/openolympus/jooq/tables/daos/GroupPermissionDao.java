/**
 * This class is generated by jOOQ
 */
package org.ng200.openolympus.jooq.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Record3;
import org.jooq.impl.DAOImpl;
import org.ng200.openolympus.jooq.enums.GroupPermissionType;
import org.ng200.openolympus.jooq.tables.GroupPermission;
import org.ng200.openolympus.jooq.tables.records.GroupPermissionRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GroupPermissionDao extends DAOImpl<GroupPermissionRecord, org.ng200.openolympus.jooq.tables.pojos.GroupPermission, Record3<Long, Long, GroupPermissionType>> {

	/**
	 * Create a new GroupPermissionDao without any configuration
	 */
	public GroupPermissionDao() {
		super(GroupPermission.GROUP_PERMISSION, org.ng200.openolympus.jooq.tables.pojos.GroupPermission.class);
	}

	/**
	 * Create a new GroupPermissionDao with an attached configuration
	 */
	public GroupPermissionDao(Configuration configuration) {
		super(GroupPermission.GROUP_PERMISSION, org.ng200.openolympus.jooq.tables.pojos.GroupPermission.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected Record3<Long, Long, GroupPermissionType> getId(org.ng200.openolympus.jooq.tables.pojos.GroupPermission object) {
		return compositeKeyRecord(object.getPrincipalId(), object.getGroupId(), object.getPermission());
	}

	/**
	 * Fetch records that have <code>principal_id IN (values)</code>
	 */
	public List<org.ng200.openolympus.jooq.tables.pojos.GroupPermission> fetchByPrincipalId(Long... values) {
		return fetch(GroupPermission.GROUP_PERMISSION.PRINCIPAL_ID, values);
	}

	/**
	 * Fetch records that have <code>group_id IN (values)</code>
	 */
	public List<org.ng200.openolympus.jooq.tables.pojos.GroupPermission> fetchByGroupId(Long... values) {
		return fetch(GroupPermission.GROUP_PERMISSION.GROUP_ID, values);
	}

	/**
	 * Fetch records that have <code>permission IN (values)</code>
	 */
	public List<org.ng200.openolympus.jooq.tables.pojos.GroupPermission> fetchByPermission(GroupPermissionType... values) {
		return fetch(GroupPermission.GROUP_PERMISSION.PERMISSION, values);
	}
}
