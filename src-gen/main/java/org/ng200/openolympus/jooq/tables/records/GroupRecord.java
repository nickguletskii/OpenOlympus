/**
 * This class is generated by jOOQ
 */
package org.ng200.openolympus.jooq.tables.records;


import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;
import org.ng200.openolympus.jooq.tables.Group;
import org.ng200.openolympus.jooq.tables.interfaces.IGroup;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "group", schema = "public")
public class GroupRecord extends UpdatableRecordImpl<GroupRecord> implements Record3<Long, String, Boolean>, IGroup {

	private static final long serialVersionUID = -1201428554;

	/**
	 * Setter for <code>public.group.id</code>.
	 */
	@Override
	public GroupRecord setId(Long value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>public.group.id</code>.
	 */
	@Id
	@Column(name = "id", unique = true, nullable = false, precision = 64)
	@Override
	public Long getId() {
		return (Long) getValue(0);
	}

	/**
	 * Setter for <code>public.group.name</code>.
	 */
	@Override
	public GroupRecord setName(String value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>public.group.name</code>.
	 */
	@Column(name = "name", unique = true, nullable = false)
	@Override
	public String getName() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>public.group.hidden</code>.
	 */
	@Override
	public GroupRecord setHidden(Boolean value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>public.group.hidden</code>.
	 */
	@Column(name = "hidden", nullable = false)
	@Override
	public Boolean getHidden() {
		return (Boolean) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Long> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Long, String, Boolean> fieldsRow() {
		return (Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Long, String, Boolean> valuesRow() {
		return (Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field1() {
		return Group.GROUP.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Group.GROUP.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Boolean> field3() {
		return Group.GROUP.HIDDEN;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Boolean value3() {
		return getHidden();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public GroupRecord value1(Long value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public GroupRecord value2(String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public GroupRecord value3(Boolean value) {
		setHidden(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public GroupRecord values(Long value1, String value2, Boolean value3) {
		value1(value1);
		value2(value2);
		value3(value3);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IGroup from) {
		setId(from.getId());
		setName(from.getName());
		setHidden(from.getHidden());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IGroup> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached GroupRecord
	 */
	public GroupRecord() {
		super(Group.GROUP);
	}

	/**
	 * Create a detached, initialised GroupRecord
	 */
	public GroupRecord(Long id, String name, Boolean hidden) {
		super(Group.GROUP);

		setValue(0, id);
		setValue(1, name);
		setValue(2, hidden);
	}
}
