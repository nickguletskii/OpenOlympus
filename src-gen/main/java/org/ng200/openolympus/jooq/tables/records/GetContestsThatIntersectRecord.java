/**
 * The MIT License
 * Copyright (c) 2014-2015 Nick Guletskii
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
/**
 * This class is generated by jOOQ
 */
package org.ng200.openolympus.jooq.tables.records;

import java.sql.Timestamp;
import java.time.Duration;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;

import org.jooq.Field;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.TableRecordImpl;
import org.ng200.openolympus.jooq.tables.GetContestsThatIntersect;
import org.ng200.openolympus.jooq.tables.interfaces.IGetContestsThatIntersect;

/**
 * This class is generated by jOOQ.
 */
@Generated(value = {
						"http://www.jooq.org",
						"jOOQ version:3.6.2"
}, comments = "This class is generated by jOOQ")
@SuppressWarnings({
					"all",
					"unchecked",
					"rawtypes"
})
@Entity
@Table(name = "get_contests_that_intersect", schema = "public")
public class GetContestsThatIntersectRecord
		extends TableRecordImpl<GetContestsThatIntersectRecord>
		implements Record5<Integer, Duration, String, Boolean, Timestamp>,
		IGetContestsThatIntersect {

	private static final long serialVersionUID = 803131972;

	/**
	 * Create a detached GetContestsThatIntersectRecord
	 */
	public GetContestsThatIntersectRecord() {
		super(GetContestsThatIntersect.GET_CONTESTS_THAT_INTERSECT);
	}

	/**
	 * Create a detached, initialised GetContestsThatIntersectRecord
	 */
	public GetContestsThatIntersectRecord(Integer id, Duration duration,
			String name, Boolean showFullTestsDuringContest,
			Timestamp startTime) {
		super(GetContestsThatIntersect.GET_CONTESTS_THAT_INTERSECT);

		this.setValue(0, id);
		this.setValue(1, duration);
		this.setValue(2, name);
		this.setValue(3, showFullTestsDuringContest);
		this.setValue(4, startTime);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return GetContestsThatIntersect.GET_CONTESTS_THAT_INTERSECT.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Duration> field2() {
		return GetContestsThatIntersect.GET_CONTESTS_THAT_INTERSECT.DURATION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return GetContestsThatIntersect.GET_CONTESTS_THAT_INTERSECT.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Boolean> field4() {
		return GetContestsThatIntersect.GET_CONTESTS_THAT_INTERSECT.SHOW_FULL_TESTS_DURING_CONTEST;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field5() {
		return GetContestsThatIntersect.GET_CONTESTS_THAT_INTERSECT.START_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<Integer, Duration, String, Boolean, Timestamp> fieldsRow() {
		return (Row5) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IGetContestsThatIntersect from) {
		this.setId(from.getId());
		this.setDuration(from.getDuration());
		this.setName(from.getName());
		this.setShowFullTestsDuringContest(
				from.getShowFullTestsDuringContest());
		this.setStartTime(from.getStartTime());
	}

	/**
	 * Getter for <code>public.get_contests_that_intersect.duration</code>.
	 */
	@Column(name = "duration", precision = 64)
	@Override
	public Duration getDuration() {
		return (Duration) this.getValue(1);
	}

	// -------------------------------------------------------------------------
	// Record5 type implementation
	// -------------------------------------------------------------------------

	/**
	 * Getter for <code>public.get_contests_that_intersect.id</code>.
	 */
	@Column(name = "id", nullable = false, precision = 32)
	@Override
	public Integer getId() {
		return (Integer) this.getValue(0);
	}

	/**
	 * Getter for <code>public.get_contests_that_intersect.name</code>.
	 */
	@Column(name = "name", length = 255)
	@Override
	public String getName() {
		return (String) this.getValue(2);
	}

	/**
	 * Getter for
	 * <code>public.get_contests_that_intersect.show_full_tests_during_contest</code>
	 * .
	 */
	@Column(name = "show_full_tests_during_contest", nullable = false)
	@Override
	public Boolean getShowFullTestsDuringContest() {
		return (Boolean) this.getValue(3);
	}

	/**
	 * Getter for <code>public.get_contests_that_intersect.start_time</code>.
	 */
	@Column(name = "start_time")
	@Override
	public Timestamp getStartTime() {
		return (Timestamp) this.getValue(4);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IGetContestsThatIntersect> E into(E into) {
		into.from(this);
		return into;
	}

	/**
	 * Setter for <code>public.get_contests_that_intersect.duration</code>.
	 */
	@Override
	public GetContestsThatIntersectRecord setDuration(Duration value) {
		this.setValue(1, value);
		return this;
	}

	/**
	 * Setter for <code>public.get_contests_that_intersect.id</code>.
	 */
	@Override
	public GetContestsThatIntersectRecord setId(Integer value) {
		this.setValue(0, value);
		return this;
	}

	/**
	 * Setter for <code>public.get_contests_that_intersect.name</code>.
	 */
	@Override
	public GetContestsThatIntersectRecord setName(String value) {
		this.setValue(2, value);
		return this;
	}

	/**
	 * Setter for
	 * <code>public.get_contests_that_intersect.show_full_tests_during_contest</code>
	 * .
	 */
	@Override
	public GetContestsThatIntersectRecord setShowFullTestsDuringContest(
			Boolean value) {
		this.setValue(3, value);
		return this;
	}

	/**
	 * Setter for <code>public.get_contests_that_intersect.start_time</code>.
	 */
	@Override
	public GetContestsThatIntersectRecord setStartTime(Timestamp value) {
		this.setValue(4, value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return this.getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public GetContestsThatIntersectRecord value1(Integer value) {
		this.setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Duration value2() {
		return this.getDuration();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public GetContestsThatIntersectRecord value2(Duration value) {
		this.setDuration(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return this.getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public GetContestsThatIntersectRecord value3(String value) {
		this.setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Boolean value4() {
		return this.getShowFullTestsDuringContest();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public GetContestsThatIntersectRecord value4(Boolean value) {
		this.setShowFullTestsDuringContest(value);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value5() {
		return this.getStartTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public GetContestsThatIntersectRecord value5(Timestamp value) {
		this.setStartTime(value);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public GetContestsThatIntersectRecord values(Integer value1,
			Duration value2, String value3, Boolean value4, Timestamp value5) {
		this.value1(value1);
		this.value2(value2);
		this.value3(value3);
		this.value4(value4);
		this.value5(value5);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<Integer, Duration, String, Boolean, Timestamp> valuesRow() {
		return (Row5) super.valuesRow();
	}
}
