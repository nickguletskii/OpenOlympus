/**
 * This class is generated by jOOQ
 */
package org.ng200.openolympus.jooq.tables.pojos;


import java.math.BigDecimal;
import java.time.Duration;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

import org.ng200.openolympus.jooq.enums.VerdictStatusType;
import org.ng200.openolympus.jooq.tables.interfaces.IVerdict;
import org.ng200.openolympus.model.IVerdictSecurityDescription;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "verdict", schema = "public")
public class Verdict implements IVerdictSecurityDescription, IVerdict {

	private static final long serialVersionUID = -1994850018;

	private Long              id;
	private BigDecimal        score;
	private BigDecimal        maximumScore;
	private VerdictStatusType status;
	private Boolean           viewableDuringContest;
	private String            path;
	private Duration          cpuTime;
	private Duration          realTime;
	private Long              memoryPeak;
	private String            additionalInformation;
	private Long              solutionId;

	public Verdict() {}

	public Verdict(Verdict value) {
		this.id = value.id;
		this.score = value.score;
		this.maximumScore = value.maximumScore;
		this.status = value.status;
		this.viewableDuringContest = value.viewableDuringContest;
		this.path = value.path;
		this.cpuTime = value.cpuTime;
		this.realTime = value.realTime;
		this.memoryPeak = value.memoryPeak;
		this.additionalInformation = value.additionalInformation;
		this.solutionId = value.solutionId;
	}

	public Verdict(
		Long              id,
		BigDecimal        score,
		BigDecimal        maximumScore,
		VerdictStatusType status,
		Boolean           viewableDuringContest,
		String            path,
		Duration          cpuTime,
		Duration          realTime,
		Long              memoryPeak,
		String            additionalInformation,
		Long              solutionId
	) {
		this.id = id;
		this.score = score;
		this.maximumScore = maximumScore;
		this.status = status;
		this.viewableDuringContest = viewableDuringContest;
		this.path = path;
		this.cpuTime = cpuTime;
		this.realTime = realTime;
		this.memoryPeak = memoryPeak;
		this.additionalInformation = additionalInformation;
		this.solutionId = solutionId;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false, precision = 64)
	@Override
	public Long getId() {
		return this.id;
	}

	@Override
	public Verdict setId(Long id) {
		this.id = id;
		return this;
	}

	@Column(name = "score", precision = 19, scale = 2)
	@Override
	public BigDecimal getScore() {
		return this.score;
	}

	@Override
	public Verdict setScore(BigDecimal score) {
		this.score = score;
		return this;
	}

	@Column(name = "maximum_score", nullable = false, precision = 19, scale = 2)
	@Override
	public BigDecimal getMaximumScore() {
		return this.maximumScore;
	}

	@Override
	public Verdict setMaximumScore(BigDecimal maximumScore) {
		this.maximumScore = maximumScore;
		return this;
	}

	@Column(name = "status", nullable = false)
	@Override
	public VerdictStatusType getStatus() {
		return this.status;
	}

	@Override
	public Verdict setStatus(VerdictStatusType status) {
		this.status = status;
		return this;
	}

	@Column(name = "viewable_during_contest", nullable = false)
	@Override
	public Boolean getViewableDuringContest() {
		return this.viewableDuringContest;
	}

	@Override
	public Verdict setViewableDuringContest(Boolean viewableDuringContest) {
		this.viewableDuringContest = viewableDuringContest;
		return this;
	}

	@Column(name = "path", nullable = false)
	@Override
	public String getPath() {
		return this.path;
	}

	@Override
	public Verdict setPath(String path) {
		this.path = path;
		return this;
	}

	@Column(name = "cpu_time", precision = 64)
	@Override
	public Duration getCpuTime() {
		return this.cpuTime;
	}

	@Override
	public Verdict setCpuTime(Duration cpuTime) {
		this.cpuTime = cpuTime;
		return this;
	}

	@Column(name = "real_time", precision = 64)
	@Override
	public Duration getRealTime() {
		return this.realTime;
	}

	@Override
	public Verdict setRealTime(Duration realTime) {
		this.realTime = realTime;
		return this;
	}

	@Column(name = "memory_peak", precision = 64)
	@Override
	public Long getMemoryPeak() {
		return this.memoryPeak;
	}

	@Override
	public Verdict setMemoryPeak(Long memoryPeak) {
		this.memoryPeak = memoryPeak;
		return this;
	}

	@Column(name = "additional_information")
	@Override
	public String getAdditionalInformation() {
		return this.additionalInformation;
	}

	@Override
	public Verdict setAdditionalInformation(String additionalInformation) {
		this.additionalInformation = additionalInformation;
		return this;
	}

	@Column(name = "solution_id", precision = 64)
	@Override
	public Long getSolutionId() {
		return this.solutionId;
	}

	@Override
	public Verdict setSolutionId(Long solutionId) {
		this.solutionId = solutionId;
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IVerdict from) {
		setId(from.getId());
		setScore(from.getScore());
		setMaximumScore(from.getMaximumScore());
		setStatus(from.getStatus());
		setViewableDuringContest(from.getViewableDuringContest());
		setPath(from.getPath());
		setCpuTime(from.getCpuTime());
		setRealTime(from.getRealTime());
		setMemoryPeak(from.getMemoryPeak());
		setAdditionalInformation(from.getAdditionalInformation());
		setSolutionId(from.getSolutionId());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IVerdict> E into(E into) {
		into.from(this);
		return into;
	}
}
