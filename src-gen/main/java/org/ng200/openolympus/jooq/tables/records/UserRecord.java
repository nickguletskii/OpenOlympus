/**
 * The MIT License
 * Copyright (c) 2014-2015 Nick Guletskii
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
/**
 * This class is generated by jOOQ
 */
package org.ng200.openolympus.jooq.tables.records;

import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.ng200.openolympus.jooq.tables.User;
import org.ng200.openolympus.jooq.tables.interfaces.IUser;

/**
 * This class is generated by jOOQ.
 */
@Generated(value = {
						"http://www.jooq.org",
						"jOOQ version:3.6.2"
}, comments = "This class is generated by jOOQ")
@SuppressWarnings({
					"all",
					"unchecked",
					"rawtypes"
})
@Entity
@Table(name = "USER", schema = "public")
public class UserRecord extends UpdatableRecordImpl<UserRecord>
		implements IUser {

	private static final long serialVersionUID = 641054361;

	/**
	 * Create a detached UserRecord
	 */
	public UserRecord() {
		super(User.USER);
	}

	/**
	 * Create a detached, initialised UserRecord
	 */
	public UserRecord(Long id, String username, String firstNameMain,
			String addressCity, String addressCountry, String addressLine1,
			String addressLine2, String addressState, Boolean approvalEmailSent,
			Timestamp birthDate, String emailAddress,
			String emailConfirmationToken, Boolean enabled,
			String firstNameLocalised, String landline,
			String lastNameLocalised, String lastNameMain,
			String middleNameLocalised, String middleNameMain, String mobile,
			String password, String school, String teacherFirstName,
			String teacherLastName, String teacherMiddleName, Boolean superuser,
			Boolean approved) {
		super(User.USER);

		this.setValue(0, id);
		this.setValue(1, username);
		this.setValue(2, firstNameMain);
		this.setValue(3, addressCity);
		this.setValue(4, addressCountry);
		this.setValue(5, addressLine1);
		this.setValue(6, addressLine2);
		this.setValue(7, addressState);
		this.setValue(8, approvalEmailSent);
		this.setValue(9, birthDate);
		this.setValue(10, emailAddress);
		this.setValue(11, emailConfirmationToken);
		this.setValue(12, enabled);
		this.setValue(13, firstNameLocalised);
		this.setValue(14, landline);
		this.setValue(15, lastNameLocalised);
		this.setValue(16, lastNameMain);
		this.setValue(17, middleNameLocalised);
		this.setValue(18, middleNameMain);
		this.setValue(19, mobile);
		this.setValue(20, password);
		this.setValue(21, school);
		this.setValue(22, teacherFirstName);
		this.setValue(23, teacherLastName);
		this.setValue(24, teacherMiddleName);
		this.setValue(25, superuser);
		this.setValue(26, approved);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IUser from) {
		this.setId(from.getId());
		this.setUsername(from.getUsername());
		this.setFirstNameMain(from.getFirstNameMain());
		this.setAddressCity(from.getAddressCity());
		this.setAddressCountry(from.getAddressCountry());
		this.setAddressLine1(from.getAddressLine1());
		this.setAddressLine2(from.getAddressLine2());
		this.setAddressState(from.getAddressState());
		this.setApprovalEmailSent(from.getApprovalEmailSent());
		this.setBirthDate(from.getBirthDate());
		this.setEmailAddress(from.getEmailAddress());
		this.setEmailConfirmationToken(from.getEmailConfirmationToken());
		this.setEnabled(from.getEnabled());
		this.setFirstNameLocalised(from.getFirstNameLocalised());
		this.setLandline(from.getLandline());
		this.setLastNameLocalised(from.getLastNameLocalised());
		this.setLastNameMain(from.getLastNameMain());
		this.setMiddleNameLocalised(from.getMiddleNameLocalised());
		this.setMiddleNameMain(from.getMiddleNameMain());
		this.setMobile(from.getMobile());
		this.setPassword(from.getPassword());
		this.setSchool(from.getSchool());
		this.setTeacherFirstName(from.getTeacherFirstName());
		this.setTeacherLastName(from.getTeacherLastName());
		this.setTeacherMiddleName(from.getTeacherMiddleName());
		this.setSuperuser(from.getSuperuser());
		this.setApproved(from.getApproved());
	}

	/**
	 * Getter for <code>public.USER.address_city</code>.
	 */
	@Column(name = "address_city", length = 255)
	@Override
	public String getAddressCity() {
		return (String) this.getValue(3);
	}

	/**
	 * Getter for <code>public.USER.address_country</code>.
	 */
	@Column(name = "address_country", length = 255)
	@Override
	public String getAddressCountry() {
		return (String) this.getValue(4);
	}

	/**
	 * Getter for <code>public.USER.address_line1</code>.
	 */
	@Column(name = "address_line1")
	@Override
	public String getAddressLine1() {
		return (String) this.getValue(5);
	}

	/**
	 * Getter for <code>public.USER.address_line2</code>.
	 */
	@Column(name = "address_line2")
	@Override
	public String getAddressLine2() {
		return (String) this.getValue(6);
	}

	/**
	 * Getter for <code>public.USER.address_state</code>.
	 */
	@Column(name = "address_state", length = 255)
	@Override
	public String getAddressState() {
		return (String) this.getValue(7);
	}

	/**
	 * Getter for <code>public.USER.approval_email_sent</code>.
	 */
	@Column(name = "approval_email_sent", nullable = false)
	@Override
	public Boolean getApprovalEmailSent() {
		return (Boolean) this.getValue(8);
	}

	/**
	 * Getter for <code>public.USER.approved</code>.
	 */
	@Column(name = "approved", nullable = false)
	@Override
	public Boolean getApproved() {
		return (Boolean) this.getValue(26);
	}

	/**
	 * Getter for <code>public.USER.birth_date</code>.
	 */
	@Column(name = "birth_date")
	@Override
	public Timestamp getBirthDate() {
		return (Timestamp) this.getValue(9);
	}

	/**
	 * Getter for <code>public.USER.email_address</code>.
	 */
	@Column(name = "email_address", length = 255)
	@Override
	public String getEmailAddress() {
		return (String) this.getValue(10);
	}

	/**
	 * Getter for <code>public.USER.email_confirmation_token</code>.
	 */
	@Column(name = "email_confirmation_token", length = 255)
	@Override
	public String getEmailConfirmationToken() {
		return (String) this.getValue(11);
	}

	/**
	 * Getter for <code>public.USER.enabled</code>.
	 */
	@Column(name = "enabled", nullable = false)
	@Override
	public Boolean getEnabled() {
		return (Boolean) this.getValue(12);
	}

	/**
	 * Getter for <code>public.USER.first_name_localised</code>.
	 */
	@Column(name = "first_name_localised", length = 255)
	@Override
	public String getFirstNameLocalised() {
		return (String) this.getValue(13);
	}

	/**
	 * Getter for <code>public.USER.first_name_main</code>.
	 */
	@Column(name = "first_name_main", length = 255)
	@Override
	public String getFirstNameMain() {
		return (String) this.getValue(2);
	}

	/**
	 * Getter for <code>public.USER.id</code>.
	 */
	@Id
	@Column(name = "id", unique = true, nullable = false, precision = 64)
	@Override
	public Long getId() {
		return (Long) this.getValue(0);
	}

	/**
	 * Getter for <code>public.USER.landline</code>.
	 */
	@Column(name = "landline", length = 255)
	@Override
	public String getLandline() {
		return (String) this.getValue(14);
	}

	/**
	 * Getter for <code>public.USER.last_name_localised</code>.
	 */
	@Column(name = "last_name_localised", length = 255)
	@Override
	public String getLastNameLocalised() {
		return (String) this.getValue(15);
	}

	/**
	 * Getter for <code>public.USER.last_name_main</code>.
	 */
	@Column(name = "last_name_main", length = 255)
	@Override
	public String getLastNameMain() {
		return (String) this.getValue(16);
	}

	/**
	 * Getter for <code>public.USER.middle_name_localised</code>.
	 */
	@Column(name = "middle_name_localised", length = 255)
	@Override
	public String getMiddleNameLocalised() {
		return (String) this.getValue(17);
	}

	/**
	 * Getter for <code>public.USER.middle_name_main</code>.
	 */
	@Column(name = "middle_name_main", length = 255)
	@Override
	public String getMiddleNameMain() {
		return (String) this.getValue(18);
	}

	/**
	 * Getter for <code>public.USER.mobile</code>.
	 */
	@Column(name = "mobile", length = 255)
	@Override
	public String getMobile() {
		return (String) this.getValue(19);
	}

	/**
	 * Getter for <code>public.USER.password</code>.
	 */
	@Column(name = "password", length = 255)
	@Override
	public String getPassword() {
		return (String) this.getValue(20);
	}

	/**
	 * Getter for <code>public.USER.school</code>.
	 */
	@Column(name = "school", length = 255)
	@Override
	public String getSchool() {
		return (String) this.getValue(21);
	}

	/**
	 * Getter for <code>public.USER.superuser</code>.
	 */
	@Column(name = "superuser", nullable = false)
	@Override
	public Boolean getSuperuser() {
		return (Boolean) this.getValue(25);
	}

	/**
	 * Getter for <code>public.USER.teacher_first_name</code>.
	 */
	@Column(name = "teacher_first_name", length = 255)
	@Override
	public String getTeacherFirstName() {
		return (String) this.getValue(22);
	}

	/**
	 * Getter for <code>public.USER.teacher_last_name</code>.
	 */
	@Column(name = "teacher_last_name", length = 255)
	@Override
	public String getTeacherLastName() {
		return (String) this.getValue(23);
	}

	/**
	 * Getter for <code>public.USER.teacher_middle_name</code>.
	 */
	@Column(name = "teacher_middle_name", length = 255)
	@Override
	public String getTeacherMiddleName() {
		return (String) this.getValue(24);
	}

	/**
	 * Getter for <code>public.USER.username</code>.
	 */
	@Column(name = "username", unique = true, length = 255)
	@Override
	public String getUsername() {
		return (String) this.getValue(1);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IUser> E into(E into) {
		into.from(this);
		return into;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Long> key() {
		return (Record1) super.key();
	}

	/**
	 * Setter for <code>public.USER.address_city</code>.
	 */
	@Override
	public UserRecord setAddressCity(String value) {
		this.setValue(3, value);
		return this;
	}

	/**
	 * Setter for <code>public.USER.address_country</code>.
	 */
	@Override
	public UserRecord setAddressCountry(String value) {
		this.setValue(4, value);
		return this;
	}

	/**
	 * Setter for <code>public.USER.address_line1</code>.
	 */
	@Override
	public UserRecord setAddressLine1(String value) {
		this.setValue(5, value);
		return this;
	}

	/**
	 * Setter for <code>public.USER.address_line2</code>.
	 */
	@Override
	public UserRecord setAddressLine2(String value) {
		this.setValue(6, value);
		return this;
	}

	/**
	 * Setter for <code>public.USER.address_state</code>.
	 */
	@Override
	public UserRecord setAddressState(String value) {
		this.setValue(7, value);
		return this;
	}

	/**
	 * Setter for <code>public.USER.approval_email_sent</code>.
	 */
	@Override
	public UserRecord setApprovalEmailSent(Boolean value) {
		this.setValue(8, value);
		return this;
	}

	/**
	 * Setter for <code>public.USER.approved</code>.
	 */
	@Override
	public UserRecord setApproved(Boolean value) {
		this.setValue(26, value);
		return this;
	}

	/**
	 * Setter for <code>public.USER.birth_date</code>.
	 */
	@Override
	public UserRecord setBirthDate(Timestamp value) {
		this.setValue(9, value);
		return this;
	}

	/**
	 * Setter for <code>public.USER.email_address</code>.
	 */
	@Override
	public UserRecord setEmailAddress(String value) {
		this.setValue(10, value);
		return this;
	}

	/**
	 * Setter for <code>public.USER.email_confirmation_token</code>.
	 */
	@Override
	public UserRecord setEmailConfirmationToken(String value) {
		this.setValue(11, value);
		return this;
	}

	/**
	 * Setter for <code>public.USER.enabled</code>.
	 */
	@Override
	public UserRecord setEnabled(Boolean value) {
		this.setValue(12, value);
		return this;
	}

	/**
	 * Setter for <code>public.USER.first_name_localised</code>.
	 */
	@Override
	public UserRecord setFirstNameLocalised(String value) {
		this.setValue(13, value);
		return this;
	}

	/**
	 * Setter for <code>public.USER.first_name_main</code>.
	 */
	@Override
	public UserRecord setFirstNameMain(String value) {
		this.setValue(2, value);
		return this;
	}

	/**
	 * Setter for <code>public.USER.id</code>.
	 */
	@Override
	public UserRecord setId(Long value) {
		this.setValue(0, value);
		return this;
	}

	/**
	 * Setter for <code>public.USER.landline</code>.
	 */
	@Override
	public UserRecord setLandline(String value) {
		this.setValue(14, value);
		return this;
	}

	/**
	 * Setter for <code>public.USER.last_name_localised</code>.
	 */
	@Override
	public UserRecord setLastNameLocalised(String value) {
		this.setValue(15, value);
		return this;
	}

	/**
	 * Setter for <code>public.USER.last_name_main</code>.
	 */
	@Override
	public UserRecord setLastNameMain(String value) {
		this.setValue(16, value);
		return this;
	}

	/**
	 * Setter for <code>public.USER.middle_name_localised</code>.
	 */
	@Override
	public UserRecord setMiddleNameLocalised(String value) {
		this.setValue(17, value);
		return this;
	}

	/**
	 * Setter for <code>public.USER.middle_name_main</code>.
	 */
	@Override
	public UserRecord setMiddleNameMain(String value) {
		this.setValue(18, value);
		return this;
	}

	/**
	 * Setter for <code>public.USER.mobile</code>.
	 */
	@Override
	public UserRecord setMobile(String value) {
		this.setValue(19, value);
		return this;
	}

	/**
	 * Setter for <code>public.USER.password</code>.
	 */
	@Override
	public UserRecord setPassword(String value) {
		this.setValue(20, value);
		return this;
	}

	/**
	 * Setter for <code>public.USER.school</code>.
	 */
	@Override
	public UserRecord setSchool(String value) {
		this.setValue(21, value);
		return this;
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * Setter for <code>public.USER.superuser</code>.
	 */
	@Override
	public UserRecord setSuperuser(Boolean value) {
		this.setValue(25, value);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * Setter for <code>public.USER.teacher_first_name</code>.
	 */
	@Override
	public UserRecord setTeacherFirstName(String value) {
		this.setValue(22, value);
		return this;
	}

	/**
	 * Setter for <code>public.USER.teacher_last_name</code>.
	 */
	@Override
	public UserRecord setTeacherLastName(String value) {
		this.setValue(23, value);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Setter for <code>public.USER.teacher_middle_name</code>.
	 */
	@Override
	public UserRecord setTeacherMiddleName(String value) {
		this.setValue(24, value);
		return this;
	}

	/**
	 * Setter for <code>public.USER.username</code>.
	 */
	@Override
	public UserRecord setUsername(String value) {
		this.setValue(1, value);
		return this;
	}
}
