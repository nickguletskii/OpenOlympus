/**
 * This class is generated by jOOQ
 */
package org.ng200.openolympus.jooq.tables.records;


import java.time.Duration;
import java.time.OffsetDateTime;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;
import org.ng200.openolympus.jooq.tables.Contest;
import org.ng200.openolympus.jooq.tables.interfaces.IContest;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "contest", schema = "public")
public class ContestRecord extends UpdatableRecordImpl<ContestRecord> implements Record5<Integer, Duration, String, Boolean, OffsetDateTime>, IContest {

	private static final long serialVersionUID = 100944241;

	/**
	 * Setter for <code>public.contest.id</code>.
	 */
	@Override
	public ContestRecord setId(Integer value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>public.contest.id</code>.
	 */
	@Id
	@Column(name = "id", unique = true, nullable = false, precision = 32)
	@Override
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>public.contest.duration</code>.
	 */
	@Override
	public ContestRecord setDuration(Duration value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>public.contest.duration</code>.
	 */
	@Column(name = "duration", precision = 64)
	@Override
	public Duration getDuration() {
		return (Duration) getValue(1);
	}

	/**
	 * Setter for <code>public.contest.name</code>.
	 */
	@Override
	public ContestRecord setName(String value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>public.contest.name</code>.
	 */
	@Column(name = "name", unique = true, length = 255)
	@Override
	public String getName() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>public.contest.show_full_tests_during_contest</code>.
	 */
	@Override
	public ContestRecord setShowFullTestsDuringContest(Boolean value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>public.contest.show_full_tests_during_contest</code>.
	 */
	@Column(name = "show_full_tests_during_contest", nullable = false)
	@Override
	public Boolean getShowFullTestsDuringContest() {
		return (Boolean) getValue(3);
	}

	/**
	 * Setter for <code>public.contest.start_time</code>.
	 */
	@Override
	public ContestRecord setStartTime(OffsetDateTime value) {
		setValue(4, value);
		return this;
	}

	/**
	 * Getter for <code>public.contest.start_time</code>.
	 */
	@Column(name = "start_time")
	@Override
	public OffsetDateTime getStartTime() {
		return (OffsetDateTime) getValue(4);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record5 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<Integer, Duration, String, Boolean, OffsetDateTime> fieldsRow() {
		return (Row5) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<Integer, Duration, String, Boolean, OffsetDateTime> valuesRow() {
		return (Row5) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Contest.CONTEST.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Duration> field2() {
		return Contest.CONTEST.DURATION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Contest.CONTEST.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Boolean> field4() {
		return Contest.CONTEST.SHOW_FULL_TESTS_DURING_CONTEST;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<OffsetDateTime> field5() {
		return Contest.CONTEST.START_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Duration value2() {
		return getDuration();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Boolean value4() {
		return getShowFullTestsDuringContest();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OffsetDateTime value5() {
		return getStartTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ContestRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ContestRecord value2(Duration value) {
		setDuration(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ContestRecord value3(String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ContestRecord value4(Boolean value) {
		setShowFullTestsDuringContest(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ContestRecord value5(OffsetDateTime value) {
		setStartTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ContestRecord values(Integer value1, Duration value2, String value3, Boolean value4, OffsetDateTime value5) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IContest from) {
		setId(from.getId());
		setDuration(from.getDuration());
		setName(from.getName());
		setShowFullTestsDuringContest(from.getShowFullTestsDuringContest());
		setStartTime(from.getStartTime());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IContest> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ContestRecord
	 */
	public ContestRecord() {
		super(Contest.CONTEST);
	}

	/**
	 * Create a detached, initialised ContestRecord
	 */
	public ContestRecord(Integer id, Duration duration, String name, Boolean showFullTestsDuringContest, OffsetDateTime startTime) {
		super(Contest.CONTEST);

		setValue(0, id);
		setValue(1, duration);
		setValue(2, name);
		setValue(3, showFullTestsDuringContest);
		setValue(4, startTime);
	}
}
