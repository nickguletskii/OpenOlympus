/**
 * The MIT License
 * Copyright (c) 2014-2016 Nick Guletskii
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
/**
 * This class is generated by jOOQ
 */
package org.ng200.openolympus.jooq.tables.pojos;


import java.time.OffsetDateTime;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

import org.ng200.openolympus.jooq.tables.interfaces.ITask;
import org.ng200.openolympus.model.ITaskSecurityDescription;
import org.ng200.openolympus.model.LockableResourceImplWithIntegerId;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "task", schema = "public")
public class Task extends LockableResourceImplWithIntegerId implements ITaskSecurityDescription, ITask {

	private static final long serialVersionUID = -1635484087;

	private Integer        id;
	private String         descriptionFile;
	private String         name;
	private String         taskLocation;
	private OffsetDateTime createdDate;

	public Task() {}

	public Task(Task value) {
		this.id = value.id;
		this.descriptionFile = value.descriptionFile;
		this.name = value.name;
		this.taskLocation = value.taskLocation;
		this.createdDate = value.createdDate;
	}

	public Task(
		Integer        id,
		String         descriptionFile,
		String         name,
		String         taskLocation,
		OffsetDateTime createdDate
	) {
		this.id = id;
		this.descriptionFile = descriptionFile;
		this.name = name;
		this.taskLocation = taskLocation;
		this.createdDate = createdDate;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false, precision = 32)
	@Override
	public Integer getId() {
		return this.id;
	}

	@Override
	public Task setId(Integer id) {
		this.id = id;
		return this;
	}

	@Column(name = "description_file", nullable = false)
	@Override
	public String getDescriptionFile() {
		return this.descriptionFile;
	}

	@Override
	public Task setDescriptionFile(String descriptionFile) {
		this.descriptionFile = descriptionFile;
		return this;
	}

	@Column(name = "name", unique = true, length = 255)
	@Override
	public String getName() {
		return this.name;
	}

	@Override
	public Task setName(String name) {
		this.name = name;
		return this;
	}

	@Column(name = "task_location", nullable = false)
	@Override
	public String getTaskLocation() {
		return this.taskLocation;
	}

	@Override
	public Task setTaskLocation(String taskLocation) {
		this.taskLocation = taskLocation;
		return this;
	}

	@Column(name = "created_date")
	@Override
	public OffsetDateTime getCreatedDate() {
		return this.createdDate;
	}

	@Override
	public Task setCreatedDate(OffsetDateTime createdDate) {
		this.createdDate = createdDate;
		return this;
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder("Task (");

		sb.append(id);
		sb.append(", ").append(descriptionFile);
		sb.append(", ").append(name);
		sb.append(", ").append(taskLocation);
		sb.append(", ").append(createdDate);

		sb.append(")");
		return sb.toString();
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(ITask from) {
		setId(from.getId());
		setDescriptionFile(from.getDescriptionFile());
		setName(from.getName());
		setTaskLocation(from.getTaskLocation());
		setCreatedDate(from.getCreatedDate());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends ITask> E into(E into) {
		into.from(this);
		return into;
	}
}
