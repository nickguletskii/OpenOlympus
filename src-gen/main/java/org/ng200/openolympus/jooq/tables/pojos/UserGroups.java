/**
 * This class is generated by jOOQ
 */
package org.ng200.openolympus.jooq.tables.pojos;


import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.ng200.openolympus.jooq.tables.interfaces.IUserGroups;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "user_groups", schema = "public", uniqueConstraints = {
	@UniqueConstraint(columnNames = {"user_id", "group_id"})
})
public class UserGroups implements IUserGroups {

	private static final long serialVersionUID = -954767904;

	private Long    userId;
	private Long    groupId;
	private Boolean canAddOthersToGroup;
	private Boolean canGivePermissionsToOthersInGroup;

	public UserGroups() {}

	public UserGroups(UserGroups value) {
		this.userId = value.userId;
		this.groupId = value.groupId;
		this.canAddOthersToGroup = value.canAddOthersToGroup;
		this.canGivePermissionsToOthersInGroup = value.canGivePermissionsToOthersInGroup;
	}

	public UserGroups(
		Long    userId,
		Long    groupId,
		Boolean canAddOthersToGroup,
		Boolean canGivePermissionsToOthersInGroup
	) {
		this.userId = userId;
		this.groupId = groupId;
		this.canAddOthersToGroup = canAddOthersToGroup;
		this.canGivePermissionsToOthersInGroup = canGivePermissionsToOthersInGroup;
	}

	@Column(name = "user_id", nullable = false, precision = 64)
	@Override
	public Long getUserId() {
		return this.userId;
	}

	@Override
	public UserGroups setUserId(Long userId) {
		this.userId = userId;
		return this;
	}

	@Column(name = "group_id", nullable = false, precision = 64)
	@Override
	public Long getGroupId() {
		return this.groupId;
	}

	@Override
	public UserGroups setGroupId(Long groupId) {
		this.groupId = groupId;
		return this;
	}

	@Column(name = "can_add_others_to_group", nullable = false)
	@Override
	public Boolean getCanAddOthersToGroup() {
		return this.canAddOthersToGroup;
	}

	@Override
	public UserGroups setCanAddOthersToGroup(Boolean canAddOthersToGroup) {
		this.canAddOthersToGroup = canAddOthersToGroup;
		return this;
	}

	@Column(name = "can_give_permissions_to_others_in_group", nullable = false)
	@Override
	public Boolean getCanGivePermissionsToOthersInGroup() {
		return this.canGivePermissionsToOthersInGroup;
	}

	@Override
	public UserGroups setCanGivePermissionsToOthersInGroup(Boolean canGivePermissionsToOthersInGroup) {
		this.canGivePermissionsToOthersInGroup = canGivePermissionsToOthersInGroup;
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IUserGroups from) {
		setUserId(from.getUserId());
		setGroupId(from.getGroupId());
		setCanAddOthersToGroup(from.getCanAddOthersToGroup());
		setCanGivePermissionsToOthersInGroup(from.getCanGivePermissionsToOthersInGroup());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IUserGroups> E into(E into) {
		into.from(this);
		return into;
	}
}
