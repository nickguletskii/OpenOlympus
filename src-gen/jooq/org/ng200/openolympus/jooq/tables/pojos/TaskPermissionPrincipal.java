/**
 * This class is generated by jOOQ
 */
package org.ng200.openolympus.jooq.tables.pojos;


import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

import org.ng200.openolympus.jooq.tables.interfaces.ITaskPermissionPrincipal;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "task_permission_principal", schema = "public")
public class TaskPermissionPrincipal implements ITaskPermissionPrincipal {

	private static final long serialVersionUID = -1980635745;

	private Integer principalId;
	private Long    taskPermissionId;

	public TaskPermissionPrincipal() {}

	public TaskPermissionPrincipal(TaskPermissionPrincipal value) {
		this.principalId = value.principalId;
		this.taskPermissionId = value.taskPermissionId;
	}

	public TaskPermissionPrincipal(
		Integer principalId,
		Long    taskPermissionId
	) {
		this.principalId = principalId;
		this.taskPermissionId = taskPermissionId;
	}

	@Column(name = "principal_id", precision = 32)
	@Override
	public Integer getPrincipalId() {
		return this.principalId;
	}

	@Override
	public TaskPermissionPrincipal setPrincipalId(Integer principalId) {
		this.principalId = principalId;
		return this;
	}

	@Id
	@Column(name = "task_permission_id", unique = true, nullable = false, precision = 64)
	@Override
	public Long getTaskPermissionId() {
		return this.taskPermissionId;
	}

	@Override
	public TaskPermissionPrincipal setTaskPermissionId(Long taskPermissionId) {
		this.taskPermissionId = taskPermissionId;
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(ITaskPermissionPrincipal from) {
		setPrincipalId(from.getPrincipalId());
		setTaskPermissionId(from.getTaskPermissionId());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends ITaskPermissionPrincipal> E into(E into) {
		into.from(this);
		return into;
	}
}
