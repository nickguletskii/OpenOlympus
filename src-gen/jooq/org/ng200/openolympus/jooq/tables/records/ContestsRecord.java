/**
 * The MIT License
 * Copyright (c) 2014-2015 Nick Guletskii
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
/**
 * This class is generated by jOOQ
 */
package org.ng200.openolympus.jooq.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.0"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ContestsRecord extends org.jooq.impl.UpdatableRecordImpl<org.ng200.openolympus.jooq.tables.records.ContestsRecord> implements org.jooq.Record8<java.lang.Long, java.sql.Timestamp, java.lang.Long, java.sql.Timestamp, java.lang.String, java.sql.Timestamp, java.lang.Long, java.lang.Long> {

	private static final long serialVersionUID = -954280676;

	/**
	 * Setter for <code>public.contests.id</code>.
	 */
	public void setId(java.lang.Long value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>public.contests.id</code>.
	 */
	public java.lang.Long getId() {
		return (java.lang.Long) getValue(0);
	}

	/**
	 * Setter for <code>public.contests.created_date</code>.
	 */
	public void setCreatedDate(java.sql.Timestamp value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>public.contests.created_date</code>.
	 */
	public java.sql.Timestamp getCreatedDate() {
		return (java.sql.Timestamp) getValue(1);
	}

	/**
	 * Setter for <code>public.contests.duration</code>.
	 */
	public void setDuration(java.lang.Long value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>public.contests.duration</code>.
	 */
	public java.lang.Long getDuration() {
		return (java.lang.Long) getValue(2);
	}

	/**
	 * Setter for <code>public.contests.last_modified_date</code>.
	 */
	public void setLastModifiedDate(java.sql.Timestamp value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>public.contests.last_modified_date</code>.
	 */
	public java.sql.Timestamp getLastModifiedDate() {
		return (java.sql.Timestamp) getValue(3);
	}

	/**
	 * Setter for <code>public.contests.name</code>.
	 */
	public void setName(java.lang.String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>public.contests.name</code>.
	 */
	public java.lang.String getName() {
		return (java.lang.String) getValue(4);
	}

	/**
	 * Setter for <code>public.contests.start_time</code>.
	 */
	public void setStartTime(java.sql.Timestamp value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>public.contests.start_time</code>.
	 */
	public java.sql.Timestamp getStartTime() {
		return (java.sql.Timestamp) getValue(5);
	}

	/**
	 * Setter for <code>public.contests.created_by_id</code>.
	 */
	public void setCreatedById(java.lang.Long value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>public.contests.created_by_id</code>.
	 */
	public java.lang.Long getCreatedById() {
		return (java.lang.Long) getValue(6);
	}

	/**
	 * Setter for <code>public.contests.last_modified_by_id</code>.
	 */
	public void setLastModifiedById(java.lang.Long value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>public.contests.last_modified_by_id</code>.
	 */
	public java.lang.Long getLastModifiedById() {
		return (java.lang.Long) getValue(7);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Long> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record8 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row8<java.lang.Long, java.sql.Timestamp, java.lang.Long, java.sql.Timestamp, java.lang.String, java.sql.Timestamp, java.lang.Long, java.lang.Long> fieldsRow() {
		return (org.jooq.Row8) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row8<java.lang.Long, java.sql.Timestamp, java.lang.Long, java.sql.Timestamp, java.lang.String, java.sql.Timestamp, java.lang.Long, java.lang.Long> valuesRow() {
		return (org.jooq.Row8) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field1() {
		return org.ng200.openolympus.jooq.tables.Contests.CONTESTS.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field2() {
		return org.ng200.openolympus.jooq.tables.Contests.CONTESTS.CREATED_DATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field3() {
		return org.ng200.openolympus.jooq.tables.Contests.CONTESTS.DURATION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field4() {
		return org.ng200.openolympus.jooq.tables.Contests.CONTESTS.LAST_MODIFIED_DATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field5() {
		return org.ng200.openolympus.jooq.tables.Contests.CONTESTS.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field6() {
		return org.ng200.openolympus.jooq.tables.Contests.CONTESTS.START_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field7() {
		return org.ng200.openolympus.jooq.tables.Contests.CONTESTS.CREATED_BY_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field8() {
		return org.ng200.openolympus.jooq.tables.Contests.CONTESTS.LAST_MODIFIED_BY_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value2() {
		return getCreatedDate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value3() {
		return getDuration();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value4() {
		return getLastModifiedDate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value5() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value6() {
		return getStartTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value7() {
		return getCreatedById();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value8() {
		return getLastModifiedById();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ContestsRecord value1(java.lang.Long value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ContestsRecord value2(java.sql.Timestamp value) {
		setCreatedDate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ContestsRecord value3(java.lang.Long value) {
		setDuration(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ContestsRecord value4(java.sql.Timestamp value) {
		setLastModifiedDate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ContestsRecord value5(java.lang.String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ContestsRecord value6(java.sql.Timestamp value) {
		setStartTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ContestsRecord value7(java.lang.Long value) {
		setCreatedById(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ContestsRecord value8(java.lang.Long value) {
		setLastModifiedById(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ContestsRecord values(java.lang.Long value1, java.sql.Timestamp value2, java.lang.Long value3, java.sql.Timestamp value4, java.lang.String value5, java.sql.Timestamp value6, java.lang.Long value7, java.lang.Long value8) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ContestsRecord
	 */
	public ContestsRecord() {
		super(org.ng200.openolympus.jooq.tables.Contests.CONTESTS);
	}

	/**
	 * Create a detached, initialised ContestsRecord
	 */
	public ContestsRecord(java.lang.Long id, java.sql.Timestamp createdDate, java.lang.Long duration, java.sql.Timestamp lastModifiedDate, java.lang.String name, java.sql.Timestamp startTime, java.lang.Long createdById, java.lang.Long lastModifiedById) {
		super(org.ng200.openolympus.jooq.tables.Contests.CONTESTS);

		setValue(0, id);
		setValue(1, createdDate);
		setValue(2, duration);
		setValue(3, lastModifiedDate);
		setValue(4, name);
		setValue(5, startTime);
		setValue(6, createdById);
		setValue(7, lastModifiedById);
	}
}
